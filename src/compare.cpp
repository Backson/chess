#include "compare.hpp"

bool BoardCompare::operator () (const Board &lhs, const Board &rhs) const {
	if (lhs.width() < rhs.width())
		return true;
	if (lhs.width() > rhs.width())
		return false;
	if (lhs.height() < rhs.height())
		return true;
	if (lhs.height() > rhs.height())
		return false;
	auto w = lhs.width();
	auto h = lhs.height();
	for (Coord y = 0; y < h; ++y)
		for (Coord x = 0; x < w; ++x) {
			auto tile = Tile(x, y);
			auto a = lhs[tile];
			auto b = rhs[tile];
			if (a.player < b.player)
				return true;
			if (a.player > b.player)
				return false;
			if (a.type < b.type)
				return true;
			if (a.type > b.type)
				return false;
		}

	return false;
}

bool PositionCompare::operator () (const Position &lhs, const Position &rhs) const {

	if (lhs.active_player() < rhs.active_player())
		return true;
	if (lhs.active_player() > rhs.active_player())
		return false;

	BoardCompare board_comp;
	if (board_comp(lhs, rhs))
		return true;
	if (board_comp(rhs, lhs))
		return false;

	for (int player_i = 0; player_i < 2; ++player_i)
		for (int castling_i = 0; castling_i < 2; ++castling_i) {
			auto castling = static_cast<CastlingType>(castling_i);
			auto player = static_cast<Player>(player_i);
			bool lhs_castle = lhs.can_castle(player, castling);
			bool rhs_castle = rhs.can_castle(player, castling);
			if (!lhs_castle && rhs_castle)
				return true;
			if (lhs_castle && !rhs_castle)
				return false;
		}

	if (lhs.en_passant_file() < rhs.en_passant_file())
		return true;
	if (lhs.en_passant_file() > rhs.en_passant_file())
		return false;

	return false;
}

uint32 BoardHash::operator () (const Board &board) const {
	static const uint32 zobrist_constants[] = {
		0x6D54A9CB, 0xEA86D7AB, 0x9C8FAB29, 0x55BC8535,
		0x297D5234, 0xBBE88EC0, 0x2AB9BE56, 0xBE97B0AE,
		0x6706BBAF, 0xF2306604, 0x41589F40, 0xEA5C55DC,
		0x78B0D844, 0x2B814A8A, 0xAEAAEABC, 0x6A349465,
		0xAE1A7442, 0x8DE72270, 0xC1C3145F, 0x662C9E9B,
		0x91A0637E, 0x3D409559, 0x109D8CB9, 0x0690A394,
		0x42E31338, 0x0F0111D1, 0x01E69BBC, 0xB2DDF925,
		0x323C2FB4, 0x2F53BA7A, 0xDBF1BA7B, 0x5F7F0B6F,
		0x1BE69CE6, 0x67460175, 0xC140D9CB, 0x8784F04B,
		0x3769598A, 0x1E66AF95, 0xAAD2A288, 0x4060A851,
		0x7B93279E, 0x7EECF217, 0x7A55CDB0, 0x32A5DDC2,
		0x9F065233, 0xADA13A72, 0xC2F6F885, 0x0307DCCC,
		0xD46AB0E3, 0x36232C5D, 0x81DCB29E, 0x3E6631BB,
		0x47EAA372, 0x486A7DD9, 0x8FC259B6, 0x6850B5D6,
		0x3F1DBD76, 0x5DD497FF, 0x6140AF0F, 0x868619A8,
		0x8C2B0B56, 0xB828E6A4, 0xC5DF7E54, 0xF7E7B513,
		0x97CD107A, 0x111D5A88, 0x5D020A28, 0x4C5DACAB,
		0x11443A16, 0x5874AE87, 0xD2BC7584, 0x110D2733,
		0xA5E088F7, 0xC6B3D4B3, 0xD879007D, 0xA0AEE837,
		0xDF2E2D67, 0xFBCF3897, 0x217B7530, 0x0DAA8BE5,
		0x4EA0C2A5, 0x7740C936, 0x58BA2B4C, 0x8D198599,
		0x92AB84D0, 0x6155EFFA, 0xD115095E, 0xBCBB13CA,
		0xF75FF149, 0x4C10F2A5, 0x121CFD35, 0x1A843BA5,
		0x2F1D23A7, 0xC1542638, 0x6E768362, 0xC443A19D,
		0xBAE9F8DF, 0xD3E702BA, 0x753C7C5E, 0x511B3D90,
		0x25E6B00F, 0x48AC7C1A, 0xC3406B7C, 0x2B6D5CF9,
		0x0CEB9D51, 0x15247382, 0xF1039104, 0xBEF2600A,
		0x581F838B, 0xB0FED6E4, 0xBB2B912B, 0x42396861,
		0x239AEC3F, 0xE3ED8051, 0x0AFE9E39, 0xDE23E61A,
		0x3E1E10AF, 0x0A341DA7, 0x1B909D9D, 0x92B2CCCE,
		0x89C845AA, 0x1CD64D72, 0x85B70E53, 0x8C4C2BDB,
		0xEDF4995F, 0x63C79DD4, 0x13A8539D, 0xE3F69056,
		0x8058BF26, 0xB5F5E7C7, 0xCB7D7C5C, 0x6A43277D,
		0x194E2E7D, 0x357E8B54, 0x04FD7A6C, 0xD8665A39,
		0xE77D53AA, 0x2B3891AF, 0xC3C428F7, 0xD79A81A4,
		0xE2A19883, 0xA2818C44, 0x24EA2F5E, 0xA61EEE50,
		0x73B5E557, 0x2816C83D, 0x0C3D1535, 0xF2F01F49,
		0x6C17B1AD, 0xD005957F, 0xE4E37084, 0x60BD7479,
		0x294E0478, 0x7DBC60F7, 0x1D8CA50D, 0x466745B3,
		0xE60019C9, 0x059AC0C7, 0xBC13D8BF, 0xDEBB9D49,
		0xD9A8B189, 0x80F714F1, 0x9B06A926, 0xF912A10A,
		0x270E59BB, 0x34D41D31, 0x0F54F374, 0x29F0DDA9,
		0x9F8AF060, 0x3C571F74, 0x77F39359, 0xD0E3363C,
		0x062C661F, 0x6DE9C404, 0x107581FD, 0x306F1C81,
		0xCD105279, 0x8AA1ACC7, 0xFE7F2472, 0xF06090E7,
		0x6B2041CE, 0x1DB89B2F, 0x874253C6, 0x58DF2AF5,
		0xCBE81489, 0x255233A9, 0x2B9A018C, 0xDB51B892,
		0xA1BD0D11, 0x05DC108B, 0x17C1CD15, 0xBDCE132C,
		0x9E50CC1F, 0x49519ABB, 0x82593306, 0xEF803AD6,
		0xFCE7E12D, 0x686A0662, 0x153CD6F0, 0xA6B35CF3,
		0x1C98F61D, 0x6887BA47, 0x4985E3AD, 0x88F23226,
		0xF111AD27, 0xDFCF856B, 0xBC86AAC8, 0x2CBBE1BF,
		0x110D8FEC, 0xC881EB4F, 0x0C2602A2, 0xF78D9430,
		0x3D3713BA, 0x3396206A, 0x52765BD0, 0x1556BB7B,
		0x3E3BE1DF, 0xD131732A, 0x3FDC3E62, 0x6F2E4A79,
		0x0C17A5FA, 0xC6C1A938, 0x52AA0014, 0x3047CB12,
		0x6DA90BDC, 0x37CAE109, 0x9AEF6683, 0xD1F8469A,
		0x6E3D8246, 0x88D33DB1, 0x9C8A6FD5, 0xBFE0BC4D,
		0x76D60E21, 0xF9E37420, 0x6C5F9E9A, 0xC75DD9AC,
		0x86E56E12, 0x15805293, 0x5039BCB3, 0xDFD18154,
		0x5178DFDA, 0x332D557A, 0x0645A239, 0xE005DF33,
		0xBE0EA7E0, 0xD3C122AF, 0xEDE1A3CE, 0x85A0E7DA,
		0x59F72862, 0x99CA5C27, 0x883847D4, 0x187B5DE8,
		0xB61C7AC0, 0x87EFD4D9, 0x1DF0F789, 0x7D30FC62,
		0xED096493, 0xDC39112A, 0x2E1FE988, 0xA4D966DB,
		0xD9570B56, 0x303F240F, 0x14153B94, 0xC442AB1A,
		0xFA9EDE78, 0x1507A9DE, 0xDF19EE4E, 0xF590EB7E,
		0xC37FCC44, 0x2D507397, 0x57DB5C6E, 0x8B86C73B,
		0x28ABD43F, 0xEAE2CB68, 0x3E455987, 0x0798FA2B,
		0x19E89C05, 0xAB2814D5, 0xF9EAA07E, 0x403B9CD8,
		0xB29831C2, 0x685EA58F, 0xEFCB0407, 0x9D8000BB,
		0xE6A37070, 0x904EA5D1, 0x68F91E20, 0xF7DBBEAC,
		0xB0838FB2, 0x0D6D5705, 0xAC15CD43, 0x85CFB5CE,
		0xC5F239DD, 0x443D68AC, 0xC227E4CB, 0x7D99AD63,
		0xBA20E768, 0x2FA9AEF7, 0xF622636C, 0xBBEF0897,
		0x0CC5DE25, 0xF7971397, 0xE252B040, 0x954F1A7B,
		0xA20198E0, 0x001D9AC0, 0xDE215E2C, 0x2893ED18,
		0xD3933B17, 0xEE1CAB68, 0x52D9FBC3, 0xC77E2EA0,
		0x5FB2DECC, 0x7E0E4FA2, 0x0A269723, 0xD2E6C7AF,
		0x32D887D7, 0xF82C0AF8, 0x835ACDE0, 0xA2C97D38,
		0xCB8A8D9A, 0xD82D8124, 0xCB978C0D, 0x64EF21E7,
		0x9855C82E, 0x798EE8A8, 0xF14D2EC8, 0xA833736E,
		0x3D56A09C, 0xBD26E212, 0x10A1D2F6, 0x831C2F3F,
		0x322E9F2A, 0x4F522C8A, 0xEF6CF793, 0xFE8B494D,
		0x5785E574, 0x94EC755F, 0x221A043B, 0xF4FAFD51,
		0x882B75DA, 0x6C6561CA, 0x562B589B, 0xE20F4DB1,
		0xD6CB5E4A, 0x1500A1A5, 0xD5F10036, 0xC9C63FEE,
		0xE2E5AF45, 0x89077760, 0xFA0E02F6, 0x6E6DAB3F,
		0x005FFB44, 0xC535A996, 0xF2708E62, 0xE2A97A26,
		0x56F6B6C6, 0x08882CEA, 0x392C6130, 0xD385A39D,
		0xAB0A729A, 0x9345E9E4, 0x7D76A7D0, 0xCD9BC927,
		0x295138D9, 0xDF28CC39, 0x0CFF73E1, 0xEE6ED032,
		0x3EA3C916, 0x07FFEE4C, 0x07A8F6C1, 0x8327A7D3,
		0x2F14D9B4, 0x8FE8F8BE, 0xCEF0DBCD, 0x56BDD88D,
		0x24C3CCBC, 0xB13BDC6E, 0x5ADAF971, 0xDD666275,
		0xB61EA412, 0x4EF0A732, 0xDD54AC15, 0x83D5EE46,
		0xC3500B1A, 0xD60256D0, 0x50F29722, 0xD52F70C8,
		0xFC66262A, 0x7554C7C0, 0x2376D47F, 0x1E0B03AE,
		0x1268FBF9, 0x1A2CC007, 0x807B396B, 0xDE97A0CB,
		0xEB884A69, 0x96DEA2E7, 0x08A4390C, 0x8DD71421,
		0xB4727098, 0xE8CA87B2, 0x9F5F8DD8, 0x2A51E1ED,
		0xBBD4959E, 0xE78B655F, 0xC0C10370, 0x4B4661DF,
		0x5D89533D, 0x3D005254, 0xCBAA5D51, 0x5B1E1C0E,
		0x1919173A, 0x483E2A1F, 0xBC6A87A6, 0x91EB7734,
		0x44CB93E2, 0x4A2169AB, 0x4DEF70D9, 0x196E1E7A,
		0x261BC3FC, 0x81602AFA, 0x18E27FCD, 0x9DD13423,
		0xB7DF48FD, 0x735A4DA2, 0x2FBFB29B, 0x223A05C8,
		0xDF597C5B, 0xF7C2C976, 0x86D115C0, 0x3AFC6E5B,
		0x46949FEF, 0x8962C8E0, 0x6D56566A, 0x87F0E119,
		0xB75D18D2, 0x785B323C, 0xB7E5C822, 0x849810E3,
		0xE7FA7E83, 0x64DD2DD1, 0x3EAE2687, 0x53159A99,
		0x9D768BA2, 0xDE2BBBE0, 0xFF7D392A, 0x8C9169A0,
		0x3E4E27A3, 0x253D1EA2, 0x64B9D504, 0x62AA24ED,
		0x386F263F, 0xA7DED9D6, 0xA7368AE7, 0xD51261BA,
		0xEB4E68BE, 0x1FABEF23, 0x991FC73A, 0xC6F2E4A8,
		0xF333F0E2, 0xBD65CDC2, 0x5E92F528, 0x5123F8A9,
		0x5EC4D595, 0x5D4B6D21, 0xD933DA1B, 0x402AEFEE,
		0x10A5321B, 0x789DE1F6, 0xF6493808, 0x4495D77F,
		0x5EDD8777, 0x0174865B, 0x71A257D2, 0x9FABB6B1,
		0x28C3ACE2, 0xC526E6F4, 0x3B96F664, 0x51FE71C4,
		0xE64669C4, 0xF0ACA70A, 0x9CE080F9, 0x1638378E,
		0x0D4BBBB5, 0x6C566B73, 0x2AEBE6A1, 0x31E14D60,
		0x5F9D820E, 0x067CF4D8, 0xC658BDAB, 0xA67EC064,
		0x8BB15F80, 0x902A4A80, 0x1C532DD8, 0x6A7DE6F6,
		0x46DCE802, 0x2DED2077, 0x8470ABED, 0x4FF3815D,
		0x60E590BA, 0x72F1F4CA, 0x7981E858, 0xC3ECF6CA,
		0x69A0D52B, 0x83F4965C, 0x2B781953, 0xCE765686,
		0xE38DE5D6, 0xDEAB95EB, 0x06962231, 0x777DBBF8,
		0x8CBA4BC0, 0x651D614C, 0x0E2F82A6, 0x5F081433,
		0xE9B952E7, 0x9DDEB0B1, 0xF8B9A780, 0xB7A603F9,
		0x5582F31A, 0x3CD46135, 0x5BB25410, 0xB1CB836B,
		0x8CD79783, 0x0D281F8F, 0x94A88375, 0x96793874,
		0x63E3FCBC, 0x244578AE, 0x7C306D01, 0x0B2052FE,
		0x31E8FEAE, 0xE154A977, 0x9BDD8D27, 0x3403E0DB,
		0x261E7A7F, 0x6BB6E07D, 0xC14A599D, 0xAC289F4B,
		0x628510EC, 0xD56DE318, 0x718701CE, 0x62FBD3FE,
		0x64EF12EA, 0x4C72999D, 0xA0752595, 0x48DC1C33,
		0x1A8F4E97, 0xE5D181BC, 0xCBC7E40F, 0x701BE484,
		0x9EC323DD, 0xA2D0DE99, 0x5A2F6238, 0x4A53C997,
		0x4EB15879, 0x6A997D5D, 0xD6895C31, 0x2DF02CE7,
		0xE0303BE9, 0x8B26ECC6, 0x51CCD4D9, 0x6CC937D9,
		0x3F58051E, 0xE6ECC894, 0xB6F5A24C, 0x9E93827F,
		0x4D6AE59F, 0x0BE8D544, 0x9882D3F9, 0x69D7AB88,
		0x128F7107, 0x1B2CA610, 0x010E8EEF, 0x6A26E2E2,
		0xD6261488, 0xDF4A0118, 0x4DA0E351, 0x9AE169A4,
		0x332DF809, 0x3ADAFA47, 0x667BC6CC, 0x89076F3C,
		0xB2C1BC19, 0x08BF6ED4, 0xBE0EC948, 0x471135D7,
		0x5755E0D8, 0x409E09E7, 0x87F27EF4, 0xC3513ECB,
		0xA35E3DE8, 0x38701C3F, 0x9D52EC09, 0xE8E4D87B,
		0xBA114979, 0x2EF01F18, 0x60DFFAC4, 0x39033D1A,
		0x01EFD316, 0x8DFDBA24, 0x6C0971A8, 0xECAB33E7,
		0xA5F20F52, 0xDD259F4C, 0x464E834C, 0x932D5508,
		0x755EC76B, 0xAB9ECD9E, 0x1EB1E804, 0x0EFA4D25,
		0x09BC2482, 0x6BA6EC50, 0x37161E85, 0x18016DA3,
		0x2983624A, 0x70C913B7, 0xE5A584F3, 0x52D26268,
		0xB478DFE1, 0x6C623ABD, 0xE8327EAE, 0x790BE9A8,
		0x6BB87760, 0x7B2B1C0A, 0x3BCC55CA, 0x375B7B0C,
		0x322E5456, 0xC26C68A5, 0x6C72EF39, 0x8A5E8054,
		0xE6D35BCA, 0x25A60C71, 0x6C7F07D9, 0x09403372,
		0x3C0D61C7, 0x73FF2AF1, 0x2DAA33B3, 0x953A90EA,
		0xAB5E2742, 0xE8A53BC6, 0xEA4A5853, 0x74978806,
		0x917F1E33, 0x953FFF97, 0xAD9635AE, 0xB7AB47C5,
		0x3789FED8, 0x4F5B79DB, 0xBFC5669A, 0x8D59E990,
		0x0E9E518F, 0x894EB51D, 0xF739B982, 0x08BF4B6B,
		0xC5D16929, 0x4957B9F0, 0x140C8049, 0x256F982E,
		0xA7FA24F2, 0xB0EC99C6, 0x32CB77A1, 0x4BA310EE,
		0x67857FBE, 0x75EB4C58, 0x04079043, 0x836A0BB6,
		0x56398670, 0x98331150, 0xB3302FA7, 0xF67CFF5B,
		0xBB8B8265, 0x2B2FCBB6, 0xC9E5509F, 0xF93043CF,
		0x7418D8C5, 0xF945C532, 0x399165AD, 0xC4BAAC26,
		0x2554C97E, 0x42E158F4, 0x7614CF70, 0x2A1F044D,
		0x6BB53DD8, 0xDE436095, 0xCEB4B279, 0x9D539B25,
		0x0600CEE7, 0xCD8EFA04, 0xAD603F3B, 0x858BDA93,
		0x3EC5A464, 0x2DA53EC1, 0xF2262268, 0x5026F49E,
		0x68D6C82A, 0x337523F6, 0x9B457F5F, 0xD405319E,
		0x9778A751, 0x6BBD28AA, 0x1F38BBB5, 0x004309EA,
		0xBC9E7F76, 0xAFAB53D2, 0xFB8193CD, 0x7044AD56,
		0x05521F5E, 0x34295F55, 0x025A4362, 0x1A5F055F,
		0x784F6FC9, 0x61AE3C3C, 0x3DAA0B27, 0x8184B112,
		0xC99D38D2, 0xB421E1A9, 0x15947EE7, 0xE09CF015,
		0x61DD2BA5, 0x0F865F0A, 0x1E89BA34, 0xEF69B266,
		0x1D4FAE86, 0x0A9EE1F4, 0x545AE17C, 0x0609F98B,
		0x0742448E, 0x9E464F6C, 0xEDFD1767, 0xAFB8F0C1,
		0xFF4EF546, 0x1BDF79AE, 0x57314DD1, 0x8FA55041,
		0x61BA7E9F, 0xF47C95FA, 0x65E9C630, 0xC9193ABA,
		0x3B52737B, 0x758DCD86, 0x2CB76992, 0xF11F41A3,
		0xEACB9B68, 0x2025429C, 0x95164A80, 0x6D0BB54F,
		0x26C8F99F, 0xC842A2C2, 0xAF3812A6, 0xFD7B9A97,
		0xD7B03E8C, 0xB10D3C39, 0xE7F31F63, 0x8C57F97A,
		0x169482AD, 0xA16AD3EF, 0x6CA95606, 0x8C93D772,
		0xC6314981, 0x7C4A332E, 0x6E1B7A30, 0x6B8794BD
	};

	auto w = board.width();
	auto h = board.height();
	uint32 hash = 0;

	for (Coord y = 0; y < h; ++y)
	for (Coord x = 0; x < w; ++x) {
		Tile tile(x, y);
		Piece piece = board[tile];

		if (piece == Piece::NONE)
			continue;

		int index = y * w + x;
		index *= 2;
		index += piece.player;
		index *= 6;
		index += piece.type;

		hash ^= zobrist_constants[index];
	}

	return hash;
}

uint32 PositionHash::operator () (const Position &position) const {
	static const uint32 zobrist_constants[] = {
		0xf8bc7af8, 0x8c1331da, 0x7e0ba751, 0x371903d6,
		0x0ca9f308, 0xbd7edd5b, 0x6d107429, 0xa7bc360f,
		0x9f1d0893, 0x148c1bac, 0xcf36d09a, 0x56e16ec1,
		0xcb3c7e1a, 0x79e87439, 0x53acfada, 0xc5edd270,
		0x648f0303, 0xdd580480, 0xa26cd822, 0x32e550a7,
		0x57871d7c, 0x42f74084, 0x7f568684, 0xfd220212,
		0xe48d4919, 0x41aea464, 0xe7c173b6, 0x5b89c468,
		0x12b62587, 0xd8abdda3, 0x73333b9c, 0x1f4201fd,
		0x211f3d8c, 0xe1152a01, 0xaf965ff4, 0xca11fd24,
		0x07dd972b, 0x7bd8172b, 0x4f474e7f, 0xcc49fffe,
		0xc00d34ad, 0xe8223825, 0x27707e18, 0xf99465f6,
		0xa5157dc2, 0x5dd4b418, 0x5599120f, 0xced1002d,
		0x1e8b9a0f, 0xd2169d82, 0xde03175c, 0x157212ee,
		0x311b3e1a, 0x3c7cc1ab, 0xc52ff3cc, 0xc0965665,
		0x3346c990, 0xf0762a76, 0x89db3c8d, 0xb1b2674a,
		0xb307b7af, 0x939e595a, 0x20fc9516, 0x3f237f95,
		0x1a2b4208, 0xbf8de751, 0x0b30e0cc, 0x1b12235b,
		0x1d9ed5e7, 0xa97f0fab, 0xbb36ade7, 0x8b4632ff,
		0x0663c89f, 0x65975a99, 0x55c60d09, 0x09003303,
		0x9b84f729, 0x1347cf19, 0x25ebc421, 0x30295d9c,
		0x1870fb26, 0x957d7939, 0x19b9b8d5, 0x82cd2c04,
		0xcf1a1657, 0x4901e626, 0x77062640, 0xbdb1fd4c,
		0xe0f3f4c5, 0xa1137f25, 0xbe25ff93, 0xa8129621,
		0x3f5bf749, 0x0d13e2e1, 0x2001f636, 0x98e05018,
		0xe1237c12, 0x282cf35b, 0x4a24d08d, 0x43d8da8b,
		0x8c85cfef, 0x9fd9c96e, 0x70d94a49, 0x3f556d04,
		0x853c7f82, 0x19fad53b, 0x7462507c, 0x828922a3,
		0x288df206, 0xeb590a57, 0x14145d42, 0x67af6547,
		0x602962ae, 0x173410f7, 0x9279ba63, 0xa3735f30,
		0x1de45dce, 0x7545f008, 0x6f930008, 0xf1f12c46,
		0x3fb301bd, 0x0bb39899, 0x13dcd876, 0x7ae439a1,
		0x61350773, 0x581aaca4, 0xf0557b7a, 0x7301aefe,
		0xe72ef697, 0xb0b322f4, 0x7ed453a0, 0x070192c9,
		0x8def4c07, 0x1e2ee356, 0x4d3108f0, 0x402fd974,
		0xd92dcba7, 0x9f723a53, 0x11dd5e31, 0x2871680f,
		0xce72f9d1, 0x138c8fcf, 0x5a93d546, 0x4fe02ed0,
		0x1db6f723, 0x3a5f21c1, 0x4b1ebb0c, 0x844dc4d1,
		0x768fd704, 0xdcec3d85, 0xdcd38a5f, 0x6e438a2a,
		0x8e17c65c, 0x18c9cc46, 0x054920af, 0xdfde418f,
		0x7674185f, 0x77c47892, 0xc41a23c6, 0xcc0fc164,
		0x46f9959e, 0x93a36ab4, 0x334e5ab5, 0xf2046340,
		0xdd776cce, 0x4c3f0ef0, 0x0757311a, 0x83a48d02,
		0x9226cddb, 0x61e7f3fa, 0x575142cd, 0x70c06a4e,
		0x27fd5882, 0xb4c9cf22, 0x5ddec583, 0x098cc76c,
		0x990c1c15, 0xa1c84ae8, 0x3955fef5, 0x58eca922,
		0x4d86fd84, 0x366ca5b6, 0x95421946, 0xf22179f5,
		0x3e68529f, 0xb2127005, 0xc46d813d, 0x489c6a74,
		0x9d53fb78, 0xd20111bf, 0x606538f0, 0xa73f884a,
		0x8d516e59, 0x1a967a03, 0x4033f94c, 0xf2c75fa7,
		0xd1c8aeae, 0xba589ecc, 0xfcdeb6e2, 0xba9e86e9,
		0xf3161f5b, 0x55142839, 0x33017fb6, 0xcae796d1,
		0xbf28f1d4, 0x2f14cccb, 0x88a710f7, 0x60724c70,
		0x37b68189, 0x39fa28f2, 0x989f829f, 0xf7566ba1,
		0x9c6b00e2, 0x70711273, 0xce307cee, 0x683138c2,
		0xa60fde32, 0x74219077, 0x6ce83fcd, 0xdcf9954e,
		0x83ad55c2, 0x6bf19cef, 0x6fecb21b, 0x6852f09a,
		0xf2d66e4b, 0xc5117fba, 0xb4008b7c, 0x19d840bb,
		0x7e3ff452, 0x9a5b58de, 0xfa103677, 0xfa8e60f2,
		0x23693491, 0xba5f2759, 0x5bcf74ec, 0x27129343,
		0x56a8988a, 0x47cd578b, 0xb1351a6c, 0x44d2247c,
		0x5bcb7e5f, 0x012282ba, 0xe1864e96, 0x3a8cd791,
		0x3bedab29, 0x33fc8218, 0x72ebca28, 0x87e83373,
		0x048ff1be, 0x08fd1859, 0xc081a657, 0xafda9400,
		0x43bec67f, 0xd5325aae, 0xec83aa93, 0x86f2adfd,
		0xea573d45, 0xcb6bcf71, 0xa9ed9549, 0x9637efbb,
		0x157ff8e3, 0x66d5149f, 0xc1c232e0, 0x73bb7c47,
		0x8f828902, 0xd1af3d71, 0xe1c34e4b, 0x98f422d9,
		0x872aa7f1, 0x11b06dec, 0x580abe9a, 0xed626275,
		0xe245612d, 0xaca38ebe, 0x289da05c, 0x32726b33,
		0x06889fd2, 0xed29b873, 0x29c6f5c4, 0x50bd75f1,
		0xe4e209d8, 0xc82a95fa, 0xd0f66f11, 0xe4dcd3d0,
		0x66db01c3, 0xefea3746, 0x918d1354, 0x0e961095,
		0xe7d8ce49, 0x26b70677, 0x629d2aae, 0xa2940f01,
		0x210ff5e9, 0xfb6780a3, 0x9bb9620e, 0x984e41ab,
		0xc319ba6f, 0x97f8be94, 0x5ff1bb60, 0xe43f03cf,
		0x6ea05efe, 0x6c937326, 0x8eabe704, 0x1a024fc7,
		0x656b2c44, 0x66ed3726, 0x4670ec54, 0xa2029b34,
		0x591469b7, 0x422ae4e8, 0xfddf1a23, 0x223a4d2c,
		0x0cf2a1db, 0x2037cbc5, 0x7f8abc6f, 0x762af585,
		0xefd6fc82, 0x73487ff0, 0x654e86c3, 0xc632bddf,
		0xbfefad3e, 0x7d2f18f0, 0x0321469c, 0xffd9b977,
		0x39dbadfe, 0x20dcbdae, 0x9a232c18, 0xa6a20d3b,
		0x18e5641c, 0x762ad9ca, 0x6d9fd2c6, 0x1d689dba,
		0x5eacf1e8, 0xee24cf4f, 0xa4448389, 0xe2e598a0,
		0x294fb117, 0x58f52a07, 0x96391ee1, 0x7fdd0bc5,
		0x6e9f3b71, 0xf9843760, 0x43cb1284, 0x36f0142e,
		0xfa37ca7b, 0xed1050d7, 0x02c571d8, 0xdd019612,
		0x76f60360, 0xdd772a6b, 0xef2703a5, 0x99748cef,
		0x99bdb60e, 0xdf4a40f8, 0x883979b3, 0x8b515453,
		0x6ebe6834, 0x15a6ff68, 0xb332731c, 0xe170e495,
		0xb77656fe, 0x0ccf951d, 0xed25c296, 0x01188063,
		0x3a6fe6ad, 0xf8c962e9, 0x934b40b3, 0x14f60a4c,
		0x37de14ca, 0xdb2d7871, 0x9a7c220e, 0x4b80e156,
		0xe234473e, 0x34bb3366, 0x8338f340, 0xbffc9f14,
		0x533ca347, 0x7b9bd245, 0xe057cfee, 0xfc8bb0ea,
		0x0d34f96f, 0x5666059b, 0xe0832168, 0xa2a6f64c,
		0x2037a639, 0xbece3158, 0xd149a0f0, 0x86af9b6f,
		0xd4fa2998, 0x1e88c320, 0xfebd105c, 0xe7f61886,
		0x2b330aef, 0x4fb0706c, 0xde1808d5, 0x1ecd263c,
		0x3c79a206, 0x7288651b, 0x0e3b8b13, 0xab54f808,
		0x16824dd1, 0x6864e0e1, 0x479743ee, 0xfc2e0d3a,
		0xad653839, 0xaf6f05cb, 0xd5bfca00, 0x2be061e0,
		0xdf75248f, 0x241356ff, 0xe96d6e45, 0x70118894,
		0xf8e87e2f, 0x4a8dace4, 0x5ee9fa8a, 0x0d5da49e,
		0x85cfcaa9, 0x4c3b093d, 0xead9d341, 0xe6487b66,
		0x70912add, 0x8700caa0, 0xe1227a05, 0x9d419a4e,
		0x805738ff, 0xa37fdb26, 0x63d5b89a, 0xe846d6a6,
		0xfe08d2c8, 0x1bcdee56, 0xc4207e52, 0x06b50f17,
	};

	BoardHash board_hash;

	uint32 hash = board_hash(position);

	int index = (position.active_player() + 1) * 9;
	index += position.en_passant_file() + 1;
	index *= 2;
	index += position.can_castle(PLAYER_WHITE, KINGSIDE);
	index *= 2;
	index += position.can_castle(PLAYER_WHITE, QUEENSIDE);
	index *= 2;
	index += position.can_castle(PLAYER_BLACK, KINGSIDE);
	index *= 2;
	index += position.can_castle(PLAYER_BLACK, QUEENSIDE);

	hash ^= zobrist_constants[index];

	return hash;
}
